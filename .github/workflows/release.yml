name: Release

on:
  push:
    tags:
      - 'v*' # 当推送以'v'开头的标签时触发工作流，例如 v1.0.0

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # 步骤1：检出仓库代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 步骤2：设置构建环境（这里以Node.js为例，你可根据项目需要替换）
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      # 步骤3：安装依赖
      - name: Install dependencies
        run: npm ci

      # 步骤4：运行测试（可选但推荐）
      - name: Run tests
        run: npm test

      # 步骤5：执行构建
      - name: Build project
        run: npm run build

      # 步骤6：创建发布包（这里将整个项目目录打包，你可根据需要调整）
      - name: Create distribution package
        run: |
          mkdir -p release
          tar -czf release/project-${{ github.ref_name }}.tar.gz --exclude='.git' --exclude='node_modules' .

      # 步骤7：自动生成Release
      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          # 使用标签名作为Release名称
          name: ${{ github.ref_name }}
          # 如果你有CHANGELOG.md，可以指定其路径来自动生成Release说明
          # body_path: CHANGELOG.md
          # 如果没有CHANGELOG，可以提供一个简单的说明
          body: |
            Automated release triggered by tag ${{ github.ref_name }}.
            ## Changes
            - For detailed changes, please refer to the commit history.
          # 指定要上传到Release中的文件
          files: |
            release/project-${{ github.ref_name }}.tar.gz
          draft: false # 设置为true时，会创建草稿Release，需要手动发布
          prerelease: false # 设置为true时，标记此为预发布版本
